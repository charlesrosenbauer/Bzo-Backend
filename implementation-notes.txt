Notes:


# Type variables

Type variables are probably the part that I have the most vague idea of how to properly implement. There's a clear conflict between them and struct layout; struct layout requires exact size and alignment of values. Unions aren't a very good option in this case, as there are legitimate reasons to make very large structs sometimes, and so a type variable without any clear constraints could easily become massive. Pointers are potentially also a poor option, especially for very small types.

We could take an approach similar to inheritance-based struct layouts in OOP languages; have all the standard parameters listed first and then list other parameters afterward. This would make struct layout more complicated for the programmer however.

Struct layout could also be handled dynamically in these cases, though that may slow down some code. However, having that as an option for the backend may also open up room for more interesting features.



