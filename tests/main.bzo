[#module: "main"]
[#import: "io"  ]




F32 :: #F32
F64 :: #F64



Mat4 :: [4][4]F32

Foo  :: F32

Vec3 :: [
	x : ^F32
	y : []F32
	z : [3]F32
]

Enum :: (I8:
	 5 = X
	-6 = Y
)

Union :: (
	X : A
	Y : B
)


add :: [n':Num] => [a:n', b:n'] -> [n'] {
	a + b
}


stddev :: [n':Num] => [xs:[]n'] -> [n', n'] {
	avg := [fold: xs, 0, add] / [len:xs]
	dev := [map : xs, [x]{
				(x-avg)^2
			}
			] \ [fold: _, 0, add] / ([len:xs]-1)
	[return: avg, dev]
}


main :: [] -> [] {
	str := "Hello World!"
	[println: str]
}



